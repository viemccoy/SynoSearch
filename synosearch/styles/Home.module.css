@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@900&display=swap');

.container {
  position: relative;
  margin-top: 10rem;
  text-align: center;
  align-items: center;
  justify-content: center;
}

.title {
  font-size: 3rem; /* Adjust if necessary */
  font-family: 'Roboto', serif;
  font-weight: 900;
  align-items: center;
  background-image: url("/synowideb.svg"); /* Default light mode SVG */
  background-repeat: no-repeat;
  background-size: contain; /* Or 'cover' depending on the desired effect */
  display: inline-block; /* Or 'block' depending on layout */
  width: 500px; /* Adjust to the width of your SVG */
  height: 800px; /* Adjust to the height of your SVG */
  margin-bottom: -42rem;
  text-indent: -9999px; /* Hide the text */
  display: flex;
  justify-content: center;
  align-items: stretch; /* Make the children fill the container vertically */
}

.inputGroup {
  display: flex;
  justify-content: center;
  align-items: stretch; /* Make the children fill the container vertically */
  border: 1.3px solid #000;
  border-radius: 0.1rem;
  width: 60%; /* Adjust this to your preference */
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1.5rem; /* Add a margin at the bottom */
}

.synoSearchObject {
  border: 1px solid #000;
  border-radius: 0.25rem;
  background-color: #fff; /* Set the background color to white */
  position: absolute;
  top: 85px;
  left: 0.5%;
  width: 99%;
  height: 89%;
}

@media (max-width: 1200px) {
  .inputGroup {
    width: 80%;
  }
}

@media (max-width: 1000px) {
  .inputGroup {
    width: 80%;
  }
}

@media (max-width: 800px) {
  .inputGroup {
    width: 80%;
  }
}

@media (max-width: 600px) {
    .inputGroup {
      width: 95%;
    }
}


@media (max-width: 520px) {
  .container {
    transform: scale(0.7);
    width: 150%;
    margin-left: -25%; 
  }
}

@media (max-width: 360px) {
  .container {
    transform: scale(0.55);
    width: 200%;  
    margin-left: -50%; 
  }
}






:global(.dark) .title {
  background-image: url("/synowidew.svg"); /* Dark mode SVG */
}


.mobileTitle {
  /* Styles for the title in mobile view */
  background-image: url("/synosmallb.svg"); /* Light mode SVG for mobile */
  font-size: 3rem;
  font-family: 'Roboto', serif;
  font-weight: 900;
  background-repeat: no-repeat;
  background-size: cover;
  display: block; /* Changed to block for simplicity */
  width: 100px;
  height: 100px;
  text-indent: -9999px; /* Hide the text */
  margin-top: 20px;
  /* Removed margin-top to simplify alignment */
}

.mobileContainer {
  display: flex;
  flex-direction: row;
  align-items: center; /* This will vertically center the children */
  justify-content: center; /* This will horizontally center the children */
  height: 10%;
  /* Removed the negative margin-top for troubleshooting */
  margin-top: -35px;
  margin-bottom: 10px;
}

@media (max-width: 600px) {
  .mobileContainer {
    transform: scale(0.9); /* Adjust the scale value as needed */
    margin-right: -70px;
    transform-origin: left; /* Ensures the scaling is centered */
    margin-top: -40px;
  }
}

@media (max-width: 500px) {
  .mobileContainer {
    transform: scale(0.8); /* Adjust the scale value as needed */
    margin-right: -125px;
    transform-origin: left; /* Ensures the scaling is centered */
    margin-top: -45px;
  }
}

@media (max-width: 400px) {
  .mobileContainer {
    transform: scale(0.7); /* Adjust the scale value as needed */
    margin-right: -160px;
    transform-origin: left; /* Ensures the scaling is centered */
    margin-top: -45px;

  }
}

@media (max-width: 350px) {
  .mobileContainer {
    transform: scale(0.6); /* Adjust the scale value as needed */
    margin-right: -250px;
    transform-origin: left; /* Ensures the scaling is centered */
    margin-top: -60px;
  }
}

@media (max-width: 300px) {
  .mobileContainer {
    transform: scale(0.5); /* Adjust the scale value as needed */
    margin-right: -300px;
    transform-origin: left; /* Ensures the scaling is centered */
    margin-top: -70px;
  }
}

:global(.dark) .mobileTitle {
  background-image: url("/synosmallw.svg"); /* Dark mode SVG for mobile */
}

.tagline {
  font-size: 1.5rem;
  margin-top: 0.5rem;
  align-items: center;
}

.form {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

}

.form input {
  width: 100%; /* Make the input box half the width of its container */
  font-size: 1.2rem;
  font-family: 'Roboto', serif;
  align-items: center;
}

.formControls select, .formControls button {
  font-size: 1.3rem; /* Increase the font size */
  border: 1px solid #000;
  border-radius: 0.25rem;
  font-family: 'Roboto', serif;
  display: flex;
  align-items: center; /* Vertically align the elements */
  justify-content: space-between; /* Distribute the space evenly between the elements */
}

.fullscreen {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  overflow: hidden; /* Prevent the particles from causing the page to scroll */
  align-items: center;
  justify-content: center;

  
}

.body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden; /* Disable scrolling */
  align-items: center;
}

.particles {
  position: fixed;
  z-index: -1;
  width: 100%;
  height: 100%;
}

.formContainer {
  display: flex;
  justify-content: center;
  align-items: center;
}



.inputGroupWide {
  display: flex;
  justify-content: space-between;
  align-items: stretch; /* Make the children fill the container vertically */
  border: 1.3px solid #000;
  border-radius: 0.1rem;
  width: 100%; /* Adjust this to your preference */
  margin-right: auto;
  margin-bottom: 1.5rem; /* Add a margin at the bottom */
}

.btnContainer {
  position: relative; /* Add this line */
  display: flex;
  font-family: 'Roboto', serif;
  flex-direction: column; /* Stack the elements vertically */
  align-items: center; /* Center the elements horizontally */

  border-left: 1px solid #000;
}

.btn {
  color: #000000; /* Set the font color to black */
  flex-grow: 1;
  display: flex;
  flex-direction: column; /* Stack the elements vertically */
  align-items: center;
  font-family: 'Roboto', serif;
  justify-content: center;
  padding: 0.7rem;
  font-size: 1.2rem;
  z-index: 10; /* Adjust this value as needed */
  background: #ffffff;
}

.btn:hover {
  cursor: pointer;
}

.customSelector:hover {
  cursor: pointer;
}

.synoSearchBox {
  margin-bottom: 1.5rem;
  border: 1px solid #000;
  border-radius: 0.25rem;
  padding: 0.5rem;
  text-align: left;
  background: #ffffff;
  font-size: 1rem;
  font-family: 'Roboto', serif;
}

.synoSearchBox:hover {
  cursor: pointer;
}

.titleLink {
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  display: inline-block; /* or 'block' depending on your layout */

}

.selectorAndButtonContainer {
  display: flex;
  flex-direction: column;
  gap: 10px; /* Creates space between items */
  margin-top: -15px;
  align-items: center; /* Center align the items for a neat look */
}

.toolsForm {
  display: flex;
  justify-content: center; /* Horizontally center the elements */
  align-items: center; /* Vertically center the elements */
  font-family: 'Roboto', serif;
  margin-bottom: 1.5rem;
}


.autoOpenSearchLabel {
  white-space: nowrap;
  font-family: 'Roboto', serif;
  margin-Right: 20px;
  
}

.openInNewTabLink {
  font-family: 'Roboto', serif;
  margin-Left: 10px;
  text-decoration: underline;
  color: #000;
}
.infoSettingsButton {
  background-color: #ffffff; /* Set the background color to white */
  margin-bottom: 20px;
  /* Other styles as needed */
}
.infoSettingsButton::before {
  content: "";
  background-color: #ffffff;
  display: inline-block;
  width: 30px; /* Adjust as needed */
  height: 30px; /* Adjust as needed */
  background: url("/infosettings.png") no-repeat center center;
  background-size: cover;
}

:global(.dark) .infoSettingsButton::before {
  background: url("/infosettings_light.png") no-repeat center center;
  background-size: cover;
}

.infoSettingsButton:hover {
  cursor: pointer;
}

.infoSettingsImage {
  width: 30px; /* Adjust as needed */
  height: 30px; /* Adjust as needed */
}

.checkboxHover {
  cursor: pointer;
}

.infoModal {
  position: fixed;
  top: 10%;
  left: 10%;
  width: 80%;
  height: 80%;
  background: #fff;
  border: 1px solid #000;
  border-radius: 0.25rem;
  padding: 1rem;
  z-index: 1000;
  overflow-y: auto; /* Enable vertical scrolling */
  max-height: 100vh; /* Set maximum height to viewport height */
}
@media (max-width: 600px) {
  .infoModal {
    overflow-y: auto;
    max-height: 100vh;
  }
}
.closeButton {
  position: absolute;
  top: 0;
  right: 0;
  padding: 0.5rem;
  cursor: pointer;
  color: #000000; /* White text for close button */
  background-color: #ffffff;
  border: 1px solid #000;

}

.tabs {
  display: flex;
  justify-content: space-between;
}



.tabButton {
  flex: 1;
  cursor: pointer;
}

.wideViewContainer {
  display: flex;
  flex-direction: row;
  align-items: center; /* This will vertically center the children */
  justify-content: center; /* This will horizontally center the children */
  height: 10%;
  /* Removed the negative margin-top for troubleshooting */
  margin-top: -250px;
  margin-bottom: 10px;
}



.wideViewTitle {
  font-size: 3rem;
  font-family: 'Roboto', serif;
  font-weight: 900;
  background-image: url("/synowideb.svg");
  background-repeat: no-repeat;
  background-size: contain;
  display: block; /* Changed to block for simplicity */
  width: 330px;
  height: 320px;
  text-indent: -9999px; /* Hide the text */
  margin-top: 240px;
  /* Removed margin-top to simplify alignment */
}

:global(.dark) .wideViewTitle {
  background-image: url("/synowidew.svg");
}

.wideViewForm {
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center; /* Center form elements */
  margin: 0 1rem;
}

.wideViewToolsForm {
  display: flex;
  justify-content: center; /* Adjusted for centering */
  align-items: center;
  margin: 0 1rem;
}





.wideViewSynoSearchBox {
  text-overflow: ellipsis; /* This will add '...' at the end if the text overflows */
  white-space: nowrap; /* This will prevent the text from wrapping to a new line */
  overflow: hidden; /* This will hide any text that overflows the box */
}

.remixIconContainer {
  position: absolute;
  top: 82%;
  left: 77%;
  transform: translate(-50%, -50%);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.7rem;
  z-index: 100;
  pointer-events: none;
  background: url("/remix.png") no-repeat center center;
  background-size: cover;
  width: 50%;
  height: 50%;
}

.remixIcon {
  font-size: 2rem;
  
}

:global(.dark) .remixIconContainer {
  background: url("/remix_light.png") no-repeat center center;
  background-size: cover;
}

.remixCount {
  margin-right: 2rem; /* Adjust as needed */
}
/* Add :global(.dark) before each class that has a dark mode variant */

:global(.dark) .formControls {
  font-size: 1.3rem;
  border: 1px solid #FFF;
  border-radius: 0.25rem;
  font-family: 'Roboto', serif;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

:global(.dark) .container {
  background-color: transparent; /* Transparent background for dark mode */
}

:global(.dark) .title {
  color: #ffffff; /* White text for dark mode */
}

:global(.dark) .tagline {
  color: #c0c0c0; /* Lighter text for dark mode */
}

:global(.dark) .form {
  background-color: transparent; /* Transparent background for dark mode */
}

:global(.dark) .form input {
  background-color: #000000; /* Darker background for search box */
  color: #ffffff; /* White text for input */
  border-color: #ffffff; /* White border for input */
}

:global(.dark) .formControls {
  border-color: #ffffff; /* White border for controls */
}

:global(.dark) .fullscreen {
  background-color: transparent; /* Transparent background for dark mode */
}

:global(.dark) .body {
  background-color: #000000; /* Dark background for body */
}

:global(.dark) .formContainer {
  background-color: transparent; /* Transparent background for dark mode */
}

:global(.dark) .inputGroup {
  border-color: #ffffff; /* White border for input group */
}

:global(.dark) .btnContainer {
  border-color: #ffffff; /* White border for button container */
}

:global(.dark) .btn {
  color: #ffffff; /* White text for buttons */
  background-color: #000000; /* Darker background for buttons */
}

:global(.dark) .btn:hover {
  background-color: #000000; /* Even darker background on hover for buttons */
}

:global(.dark) .synoSearchBox {
  background-color: #000000; /* Darker background for search box */
  color: #ffffff; /* White text for search box */
  border-color: #ffffff; /* White border for search box */
}

:global(.dark) .titleLink {
  color: #ffffff; /* Light blue color for links in dark mode */
}

:global(.dark) .toolsForm {
  background-color: #000000; /* Dark background for tools form */
}

:global(.dark) .autoOpenSearchLabel {
  color: #c0c0c0; /* Lighter text for labels in dark mode */
}

:global(.dark) .openInNewTabLink {
  color: #9ab; /* Light blue color for links in dark mode */
}

:global(.dark) .infoSettingsButton {
  background-color: #000000; /* Darker background for settings button */
}

:global(.dark) .infoModal {
  background-color: #000000; /* Darker background for modal */
  color: #ffffff; /* White text for modal */
  border-color: #ffffff; /* White border for modal */
}

:global(.dark) .tabs {
  background-color: #000000; /* Dark background for tabs */
}

:global(.dark) .tabButton {
  color: #ffffff; /* White text for tab buttons */
  background-color: #000000; /* Darker background for tab buttons */
}

:global(.dark) .tabContent {
  color: #ffffff; /* White text for tab content */
  background-color: #000000; /* Darker background for tab content */
}

:global(.dark) .wideViewContainer {
  background-color: #000000; /* Dark background for wide view container */
}



:global(.dark) .wideViewForm {
  background-color: #000000; /* Dark background for wide view form */
}

:global(.dark) .wideViewToolsForm {
  background-color: #000000; /* Dark background for wide view tools form */
}

:global(.dark) .synoSearchObject {
  background-color: #000000; /* Darker background for search object */
  border-color: #ffffff; /* White border for search object */
}

:global(.dark) .remixCount {
  color: #ffffff; /* White text for remix count */
}

body.local-body:global(.dark) {
  background-color: #000000; /* Dark background for body */
  color: #ffffff; /* White text color for body */
}

.local-link:global(.dark) {
  color: #9ab; /* Light blue color for links in dark mode */
}

.local-input:global(.dark), .local-button:global(.dark), .local-select:global(.dark), .local-textarea:global(.dark) {
  background-color: #000000; /* Darker background for form elements */
  color: #ffffff; /* White text for form elements */
  border-color: #ffffff; /* White border for form elements */
}

.local-input:global(.dark):hover, .local-button:global(.dark):hover, .local-select:global(.dark):hover, .local-textarea:global(.dark):hover {
  background-color: #000000; /* Even darker background on hover for form elements */
}

.local-input:global(.dark):active, .local-button:global(.dark):active, .local-select:global(.dark):active, .local-textarea:global(.dark):active {
  background-color: #000000; /* Even darker background on active for form elements */
}

.local-input:global(.dark):focus, .local-button:global(.dark):focus, .local-select:global(.dark):focus, .local-textarea:global(.dark):focus {
  border-color: #9ab; /* Light blue border for focused form elements */
  outline-color: #9ab; /* Light blue outline for focused form elements */
}

:global(.dark) .autoOpenSearchLabel {
  color: #c0c0c0; /* Lighter text for labels in dark mode */
}

:global(.dark) .openInNewTabLink {
  color: #9ab; /* Light blue color for links in dark mode */
}

:global(.dark) .infoSettingsButton {
  background-color: #000000 !important; /* Darker background for settings button */
}

:global(.dark) .infoModal {
  background-color: #000000; /* Darker background for modal */
  color: #ffffff; /* White text for modal */
  border-color: #ffffff; /* White border for modal */
}

:global(.dark) .closeButton {
  color: #ffffff; /* White text for close button */
  background-color: #000000;
  border-color: #ffffff; /* White border for modal */
}

:global(.dark) .tabs {
  background-color: #000000; /* Dark background for tabs */
}

:global(.dark) .tabButton {
  color: #ffffff; /* White text for tab buttons */
  background-color: #000000; /* Darker background for tab buttons */
}

:global(.dark) .formContainer {
  /* No color mentioned, but if there's a default background, invert it */
  background-color: transparent; /* Transparent background for dark mode */
}

:global(.dark) .inputGroup {
  border-color: #ffffff; /* White border for input group */
}

:global(.dark) .btnContainer {
  border-color: #ffffff; /* White border for button container */
}

:global(.dark) .titleLink {
  color: #ffffff; /* Light blue color for links in dark mode */
}

:global(.dark) .toolsForm {
  /* No color mentioned, but if there's a default background, invert it */
  background-color: #000000; /* Dark background for tools form */
}

:global(.dark) .fullscreen {
  position: fixed;
  width: 100%;
  align-items: center; /* Center the elements horizontally */
  border-left: 1px solid #000;
}

.darkModeButton::before {
  display: none;
}


.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1050; /* Ensure it's above other content */
}

.modalContent {
  background: #fff;
  border: 1px solid #000;
  border-radius: 0.25rem;
  padding: 1rem;
  z-index: 1000;
  padding: 50px;
  border-radius: 5px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Adds a subtle shadow */
  max-width: 500px; /* Adjust based on your content's needs */
  width: 90%; /* Responsive width */
  position: relative; /* For positioning the close button */
  color: #000;
}

.closeButton {
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 5px 10px;
  cursor: pointer;
  background-color: #f5f5f5; /* Light grey background */
  border: 1px solid #ddd; /* Light grey border */
  border-radius: 0.5px; /* Rounded corners */
}

:global(.dark) .modalContent {
  background: #333; /* Darker background for dark mode */
  color: #fff; /* Light text color for dark mode */
  border: 1px solid #777; /* Darker border for dark mode */
  /* Keep the rest of the properties the same unless you want to adjust them for dark mode */
  border-radius: 0.25rem;
  padding: 50px;
  box-shadow: 0 4px 6px rgba(255, 255, 255, 0.1); /* Adjust shadow color for dark mode */
  max-width: 500px;
  width: 90%;
  position: relative;
}

:global(.dark) .closeButton {
  background-color: #555; /* Darker background for the close button in dark mode */
  color: #ddd; /* Lighter text color for better visibility in dark mode */
  border: 1px solid #888; /* Adjust border color for dark mode */
  /* Keep the rest of the properties the same */
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 5px 10px;
  cursor: pointer;
  border-radius: 4px;
}